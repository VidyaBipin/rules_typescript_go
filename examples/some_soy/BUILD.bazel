# Copyright 2017 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_closure//closure:defs.bzl",
    "closure_js_template_library",
    "closure_js_binary",
    "closure_js_library",
)
load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")
load("//:defs.bzl", "ts_library", "ts_declaration")

closure_js_template_library(
    name = "template",
    srcs = ["some.soy"],
)

genrule(
    name="template_clutz",
    outs=["template.d.ts"],
    srcs=["some.soy.js",
    "@io_angular_clutz//:src/resources/partial_goog_base.js",
    "@io_bazel_rules_closure//third_party/clutz:externs.js"
    ],
    tools=["@io_angular_clutz//:clutz"],
    cmd="""
BASE=$(location @io_angular_clutz//:src/resources/partial_goog_base.js);
CLUTZ=$(location @io_angular_clutz//:clutz);
$$CLUTZ --partialInput -o $@ --skipEmitRegExp $$BASE $(SRCS)
    """
)

ts_declaration(
    name="template_ts",
    srcs=["template.d.ts"],
    generate_externs=False,
    runtime_deps=[":template"],
)

ts_library(
    name = "main",
    srcs = ["main.ts"],
    deps = [
        ":mini_closure",
        ":template_ts",
    ],
)

closure_js_library(
    name = "main_js",
    ts_lib = ":main",
    suppress=["unusedLocalVariables"],
)

closure_js_binary(
    name = "render_soy_bin",
    entry_points = ["goog:build_bazel_rules_typescript.examples.some_soy.main"],
    deps = [":main_js"],
)

nodejs_binary(
    name = "some_soy",
    data = [
        ":render_soy_bin",
    ],
    entry_point = "build_bazel_rules_typescript/examples/some_soy/render_soy_bin.js",
)

sh_test(
    name = "soy_render_test",
    srcs = ["soy_render_test.sh"],
    data = [":some_soy"],
)

ts_library(
    name="mini_closure",
    srcs=[":closure.d.ts"],
    runtime_deps = [
        "@io_bazel_rules_closure//closure/library",
    ],
    generate_externs = False,
)
