# Copyright 2017 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_typescript//:defs.bzl", "ts_config", "ts_library")

ts_library(
    name = "types",
    srcs = ["types.d.ts"],
)

ts_library(
    name = "foo_ts_library",
    srcs = ["foo.ts"],
    tsconfig = ":tsconfig.json",
    module_name = "build_bazel_rules_typescript_examples/foo",
    module_root = "foo.d.ts",
    deps = [
        ":types",
    ],
)

ts_library(
    name = "bar_ts_library",
    srcs = ["bar.ts"],
    tsconfig = ":tsconfig-bar.json",
    deps = [
        ":foo_ts_library",
        "//generated_ts",
        "//some_library:lib",
        "@npm//:typescript",
        # Example of using the `@npm//:@types` target to depend on all
        # @types packages and with the types attribute of tsconfig not
        # specified. In this case, typescript will automatically discover
        # all types under node_modules/@types and included them in the compile.
        # See getAutomaticTypeDirectiveNames in
        # https://github.com/Microsoft/TypeScript/blob/master/src/compiler/moduleNameResolver.ts.
        "@npm//:@types",
    ],
)

ts_config(
    name = "tsconfig-test",
    src = "tsconfig-test.json",
    deps = [":tsconfig.json"],
)

# Runtime libraries needed by the protobufjs library.
# Any JS code produced by the ts_proto_library rule has a runtime dependency on these scripts.
load("@build_bazel_rules_nodejs//internal/js_library:js_library.bzl", "js_library")

js_library(
    name = "protobufjs_bootstrap_scripts",
    srcs = [
        "@build_bazel_rules_typescript_protobufs_compiletime_deps//:node_modules/long/dist/long.js",
        "@build_bazel_rules_typescript_protobufs_compiletime_deps//:node_modules/protobufjs/dist/minimal/protobuf.min.js",
    ],
    # Make devmode loading work when it does require("protobufjs/minimal")
    # so this is shimmed to define it to equal global.protobuf
    amd_names = {
        "long": "Long",
        "protobufjs/minimal": "protobuf",
    },
    visibility = ["//visibility:public"],
)
